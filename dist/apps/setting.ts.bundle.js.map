{"version":3,"file":"apps/setting.ts.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;;AAEA;AACA;AAAA;AAqBA;AAnBA;;;AACA;AACA;AACA;AACA;;;;AAEA;AAEA;;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AAEA;;;AACA;;;;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;AC3BA;;;AAGA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;;;;;AACA;;AAAA;AACA;;AAAA;AACA;;AAAA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://gitlab_time_spend/./src/domain/localStorageWindow.ts","webpack://gitlab_time_spend/./src/function/nullCheck.ts","webpack://gitlab_time_spend/webpack/bootstrap","webpack://gitlab_time_spend/webpack/runtime/define property getters","webpack://gitlab_time_spend/webpack/runtime/hasOwnProperty shorthand","webpack://gitlab_time_spend/webpack/runtime/make namespace object","webpack://gitlab_time_spend/./src/apps/setting.ts"],"sourcesContent":["import { ILocalStorage } from \"./iLocalStorage\"\r\nimport { isDefined } from \"../function/nullCheck\"\r\n\r\n/**\r\n *  ブラウザ用モック\r\n */\r\nexport class LocalStorageWindow implements ILocalStorage{\r\n\r\n\tasync setObject(key :string, obj: Object, callback? :Function ){\r\n\t\tlocalStorage.setItem(key, JSON.stringify(obj))\r\n\t\tif(isDefined(callback)){\r\n\t\t\tcallback!()\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tasync getObject(key :string){\r\n        const rslt = localStorage.getItem(key)\r\n        if(rslt != null){\r\n            return JSON.parse(rslt)\r\n        }\r\n\t\treturn undefined\r\n\t}\r\n\r\n\tasync deleteObject(key :string){\r\n\t\tlocalStorage.removeItem(key)\r\n\t}\r\n}","/**\r\n * 空を表すときはundefinedを一律使用してください。\r\n * Nullは使用禁止。\r\n */\r\n\r\n/**\r\n * 変数が定義済みかどうか\r\n * @param obj \r\n * @returns \r\n */\r\nexport function isDefined(obj :any) :boolean{\r\n    if(obj == null){\r\n        new Error('Invalid Type Error: expected Undefined but Null. 空を表すときはundefinedを一律使用してください。')\r\n    }\r\n    return obj !== void 0\r\n}\r\n/**\r\n * 変数が未定義かどうか\r\n * @param obj \r\n * @returns \r\n */\r\nexport function isUndefined(obj :any) :boolean{\r\n    return !isDefined(obj)\r\n}\r\n\r\n/**\r\n * Nullチェック\r\n * 空を表すときはundefinedを一律使用してください。\r\n * @param obj \r\n * @returns \r\n */\r\nexport function isNotNull(obj :any) :boolean{\r\n    return obj != null\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\nimport { GitLabApi } from \"../domain/gitlab/gitLabApi\"\r\nimport { GitLabProjectAccessTokens } from \"../domain/gitlab/gitLabProjcetAccessTokens\"\r\nimport { ILocalStorage } from \"../domain/iLocalStorage\"\r\n// import { LocalStorageChrome } from \"../domain/localStorageChrome\"\r\nimport { LocalStorageWindow } from \"../domain/localStorageWindow\"\r\nimport { isDefined } from \"../function/nullCheck\"\r\n\r\nlet localStorageClient: ILocalStorage= new LocalStorageWindow() //LocalStorageChrome()\r\n// storageKeyで共通化したい\r\nconst KEY_SELECT_ISSUE_ID = 'select_issue_id'\r\n    , KEY_START_DATE = 'start_date'\r\n    , KEY_WORKINGTIMES = 'workingtimes'\r\n    , KEY_PRIVATE_TOKEN = 'private_token'\r\n    , KEY_GITLAB_DOMAIN = 'gitlab_domain'\r\n    , KEY_GITLAB_PROJECT_ID = 'gitlab_project_id'\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function(){\r\n    initialize()\r\n    addEventListener()\r\n});\r\n\r\nasync function initialize(){\r\n    const gitLabDomain = await localStorageClient.getObject(KEY_GITLAB_DOMAIN)\r\n        , privateToken = await localStorageClient.getObject(KEY_PRIVATE_TOKEN)\r\n        , keyGitLabProjectId = await localStorageClient.getObject(KEY_GITLAB_PROJECT_ID)\r\n    const forms = document.forms[0]\r\n        , elemGitLabDomain: HTMLInputElement = forms.gitLabDomain\r\n        , elemPrivateToken: HTMLInputElement = forms.privateToken\r\n        , elemProjectId: HTMLInputElement = forms.projectId\r\n    if(isDefined(gitLabDomain))elemGitLabDomain.setAttribute(\"value\", gitLabDomain)\r\n    if(isDefined(privateToken))elemPrivateToken.setAttribute(\"value\", privateToken)\r\n    if(isDefined(keyGitLabProjectId))elemProjectId.setAttribute(\"value\", keyGitLabProjectId)\r\n}\r\n\r\nfunction addEventListener(){\r\n    const elemSubmitButton = document.querySelector('.submit-button')!\r\n    elemSubmitButton.addEventListener('click', function(){\r\n        const forms = document.forms[0]\r\n            , gitLabDomain: string = forms.gitLabDomain.value\r\n            , privateToken: string = forms.privateToken.value\r\n            , projectId: number = forms.projectId.value\r\n        // const gitLabApi = new GitLabApi(new GitLabProjectAccessTokens(privateToken, gitLabDomain, projectId))\r\n        // gitLabApi.getLoginUser()\r\n        const isAccess = true\r\n        if(isAccess){\r\n            localStorageClient.setObject(KEY_GITLAB_DOMAIN, forms.gitLabDomain.value)\r\n            localStorageClient.setObject(KEY_PRIVATE_TOKEN, forms.privateToken.value)\r\n            localStorageClient.setObject(KEY_GITLAB_PROJECT_ID, forms.projectId.value)\r\n\t\t    window.location.href = './popup.html'\r\n        }\r\n    })\r\n}"],"names":[],"sourceRoot":""}